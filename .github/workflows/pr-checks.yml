name: PR Checks

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  lint_format_check:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      statuses: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run code checks
        run: bun run check:code

      - name: Check for changes and commit
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add .
            git commit -m "chore: auto-fix linting and formatting issues"
            git push
            echo "✅ Code formatting changes committed and pushed"
          else
            echo "✅ No formatting changes needed"
          fi

  type_check:
    name: Type Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      statuses: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run type checks
        run: bun run check:types

  changeset_check:
    name: Changeset Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      statuses: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Check if PR needs changeset
        run: |
          # Skip changeset check for release PRs created by changesets
          PR_TITLE="${{ github.event.pull_request.title }}"
          if [[ "$PR_TITLE" == *"Version Packages"* ]] || [[ "$PR_TITLE" == *"chore: release"* ]]; then
            echo "✅ Skipping changeset check for release PR"
            exit 0
          fi

          # Check if there are changes to source files
          git fetch origin main
          CHANGED_FILES=$(git diff --name-only origin/main...HEAD)

          # Skip check if only docs, config, or test files changed
          if ! echo "$CHANGED_FILES" | grep -E 'packages/.+\.(ts|js)$' | grep -v test | grep -v spec | head -1; then
            echo "✅ No source code changes detected, changeset not required"
            exit 0
          fi

          echo "Source code changes detected, checking for changeset..."

          # Check if changeset files exist
          if ls .changeset/*.md >/dev/null 2>&1; then
            CHANGESET_COUNT=$(ls -1 .changeset/*.md 2>/dev/null | wc -l)
            if [ "$CHANGESET_COUNT" -gt 0 ]; then
              echo "✅ Found $CHANGESET_COUNT changeset file(s)"
              exit 0
            fi
          fi

          echo "❌ No changeset found!"
          echo "Please add a changeset to describe your changes:"
          echo "  bun run changeset:add"
          echo ""
          echo "This helps with:"
          echo "- Automatic version bumping"
          echo "- Changelog generation"
          echo "- Release notes"
          exit 1

  build_check:
    name: Build Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      statuses: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build packages
        run: bun run build
